{"version":3,"sources":["Components/PokeCard.js","Components/PokeList.js","index.js"],"names":["PokeCards","props","className","color","href","pokeLink","src","picture","alt","name","type","entryNum","url","PokeList","state","pokemon","colorPicker","idLogic","i","axios","get","then","res","data","types","toString","id","setState","this","map","mon","PokeCard","React","Component","App","ReactDOM","render","document","querySelector"],"mappings":"sPAiCeA,EA/BG,SAACC,GACd,OACE,qBAAKC,UAAU,oDAAf,SACE,oBAAGA,UAAS,iEAA4DD,EAAME,OAASC,KAAMH,EAAMI,SAAnG,UACE,qBACEH,UAAU,0BACVI,IAAKL,EAAMM,QACXC,IAAI,yBAEN,sBAAKN,UAAU,YAAf,UACE,oBAAIA,UAAU,sCAAd,SACGD,EAAMQ,OAKT,oBAAGP,UAAU,8BAAb,mBAAkDD,EAAMS,KAAxD,OACA,qBAAKR,UAAU,OAAf,SACE,oBACEE,KAAK,IACLF,UAAU,4DAFZ,2BAIiBD,EAAMU,uBCnBhCC,EAAM,sCAESC,E,4MAChBC,MAAQ,CACHC,QAAS,I,EAGdC,YAAc,SAACN,GACV,OAAQA,GACH,IAAK,QACA,MAAO,eACZ,IAAK,OACA,MAAO,aACZ,IAAK,QACA,MAAO,cACZ,IAAK,SACA,MAAO,gBACZ,IAAK,UACA,MAAO,gBACZ,IAAK,SACA,MAAO,eACZ,IAAK,WACA,MAAO,gBACZ,IAAK,SAEL,IAAK,SACA,MAAO,gBACZ,IAAK,MACA,MAAO,cACZ,IAAK,OACA,MAAO,gBACZ,IAAK,MACA,MAAO,eACZ,IAAK,QACA,MAAO,gBACZ,QACK,MAAO,gB,kEAMjB,IAFgB,IACZO,EADW,kBAENC,GACJC,IACMC,IAAI,qCAAuCF,EAAvC,KACJG,MAAK,SAACC,GAGGL,EADDC,EAAI,GACI,KACDA,EAAI,IACH,IAEA,GAEZ,IAAMH,EAAU,CACXN,KAAMa,EAAIC,KAAKd,KACfC,KAAMY,EAAIC,KAAKC,MAAM,GAAGd,KAAKD,KAC7BF,QAAQ,2DAAD,OAA6DU,GAA7D,OAAuEC,EAAEO,WAAzE,QACPpB,SAAUO,EAAMU,EAAIC,KAAKd,KACzBE,SAAUW,EAAIC,KAAKG,GACnBvB,MAAO,EAAKa,YAAYM,EAAIC,KAAKC,MAAM,GAAGd,KAAKD,OAGpD,EAAKkB,SAAS,CAAEZ,QAAQ,GAAD,mBAAM,EAAKD,MAAMC,SAAjB,CAA0BA,UArBvDG,EAAI,EAAGA,GAAK,IAAKA,IAAM,EAAvBA,K,+BA2BT,OAA2B,OAAvBU,KAAKd,MAAMC,QAEL,+CAIA,8BACMa,KAAKd,MAAMC,QAAQc,KAAI,SAAAC,GAAG,OACtB,cAACC,EAAD,CACKtB,KAAMqB,EAAIrB,KACVF,QAASuB,EAAIvB,QAEbG,KAAMoB,EAAIpB,KACVC,SAAUmB,EAAInB,SACdR,MAAO2B,EAAI3B,MACXE,SAAUO,EAAMkB,EAAIrB,gB,GAlFjBuB,IAAMC,WCDtCC,EAAM,kBACR,cAAC,EAAD,KAGJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.aa2738d6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PokeCards = (props) => {\r\n     return (\r\n       <div className=\"mb-6 pt-6 w-full px-4 lg:w-1/ xl:w-1/5 float-left\" >\r\n         <a className={`flex items-center rounded-lg shadow-lg overflow-hidden ${props.color}`} href={props.pokeLink}>\r\n           <img\r\n             className=\"h-32 w-32 flex-shrink-0\"\r\n             src={props.picture}\r\n             alt=\"destination.imageAlt\"\r\n           />\r\n           <div className=\"px-6 py-4\">\r\n             <h2 className=\"text-lg font-semibold text-gray-800\">\r\n               {props.name}\r\n             </h2>\r\n             {/* <h3 className=\"text-lg font-semibold text-gray-800\">\r\n               {props.evolution}\r\n             </h3> */}\r\n             <p className=\"text-gray-800 font-semibold\">Type: {props.type} </p>\r\n             <div className=\"mt-4\">\r\n               <a\r\n                 href=\"/\"\r\n                 className=\"text-gray-800 hover:text-indigo-400 font-semibold text-md\"\r\n               >\r\n                 Entry Number: {props.entryNum}\r\n               </a>\r\n             </div>\r\n           </div>\r\n         </a>\r\n       </div>\r\n     );\r\n}\r\n\r\nexport default PokeCards","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport PokeCards from \"./PokeCard\"\r\n\r\nconst url = \"https://www.pokemon.com/us/pokedex/\";\r\n\r\nexport default class PokeList extends React.Component {\r\n     state = {\r\n          pokemon: []\r\n     };\r\n\r\n     colorPicker = (type) => {\r\n          switch (type) {\r\n               case \"grass\":\r\n                    return \"bg-green-300\";\r\n               case \"fire\":\r\n                    return \"bg-red-300\";\r\n               case \"water\":\r\n                    return \"bg-blue-300\";\r\n               case \"ground\":\r\n                    return \"bg-orange-900\";\r\n               case \"psychic\":\r\n                    return \"bg-purple-300\";\r\n               case \"flying\":\r\n                    return \"bg-purple-50\";\r\n               case \"electric\":\r\n                    return \"bg-yellow-300\";\r\n               case \"poison\":\r\n                    return \"bg-purple-700\";\r\n               case \"dragon\":\r\n                    return \"bg-purple-700\";\r\n               case \"ice\":\r\n                    return \"bg-blue-100\";\r\n               case \"rock\":\r\n                    return \"bg-orange-900\";\r\n               case \"bug\":\r\n                    return \"bg-green-300\";\r\n               case \"ghost\":\r\n                    return \"bg-purple-700\";\r\n               default:\r\n                    return \"bg-gray-300\";\r\n          }\r\n     };\r\n\r\n     componentDidMount() {\r\n          let idLogic\r\n          for (let i = 1; i <= 151; i++) {\r\n               axios\r\n                    .get(`https://pokeapi.co/api/v2/pokemon/` + i + `/`)\r\n                    .then((res) => {\r\n                         // console.log(res.data)\r\n                         if (i < 10) {\r\n                              idLogic = `00`\r\n                         } else if (i < 100) {\r\n                              idLogic = `0`\r\n                         } else {\r\n                              idLogic = ``\r\n                         }\r\n                         const pokemon = {\r\n                              name: res.data.name,\r\n                              type: res.data.types[0].type.name,\r\n                              picture: `https://assets.pokemon.com/assets/cms2/img/pokedex/full/${idLogic}${i.toString()}.png`,\r\n                              pokeLink: url + res.data.name,\r\n                              entryNum: res.data.id,\r\n                              color: this.colorPicker(res.data.types[0].type.name)\r\n                         }\r\n                         // this.state.pokemon.push(pokemon);\r\n                         this.setState({ pokemon: [...this.state.pokemon, pokemon] })\r\n                    });\r\n          }\r\n     }\r\n\r\n     render() {\r\n          if (this.state.pokemon === null) {\r\n               return (\r\n                    <div>Did not load</div>\r\n               )\r\n          } else {\r\n               return (\r\n                    <div>\r\n                         {this.state.pokemon.map(mon => (\r\n                              <PokeCards\r\n                                   name={mon.name}\r\n                                   picture={mon.picture}\r\n                                   // evolution={\"Evolves: \" + mon.evolution}\r\n                                   type={mon.type}\r\n                                   entryNum={mon.entryNum}\r\n                                   color={mon.color}\r\n                                   pokeLink={url + mon.name}\r\n                              ></PokeCards>\r\n                         ))}\r\n                    </div>\r\n               );\r\n          }\r\n     }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./tailwind.output.css\";\n\nimport PokeList from \"./Components/PokeList\"\n\nconst App = () => (\n    <PokeList  />\n);\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}